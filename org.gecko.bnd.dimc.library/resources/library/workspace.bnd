Bundle-DocURL: https://github.com/geckoprojects-org/${github-project}
Bundle-SCM: url=https://github.com/geckoprojects-org/${github-project}, \
	connection=scm:git:https://github.com/geckoprojects-org/${github-project}.git, \
	developerConnection=scm:git:git@github.com:geckoprojects-org/${github-project}.git
Bundle-Version: ${project-version}
Bundle-License: Eclipse Public License 2.0
Bundle-Copyright: Data In Motion Consuling GmbH - All rights reserved
Bundle-Vendor: Data In Motion Consuling GmbH
Bundle-ContactAddress: info@datainmotion.com
Bundle-Developers: \
    sbischof; \
        email="stbischof@bipolis.org"; \
        name="Stefan Bischof"; \
        roles="developer", \
    jalbert; \
        email="j.albert@datainmotion.com"; \
        name="Juergen Albert"; \
        organization="Data In Motion"; \
        organizationUrl="https://www.datainmotion.com"; \
        roles="architect,developer", \
    mhoffmann; \
        name="Mark Hoffmann"; \
        email="m.hoffmann@datainmotion.com"; \
        url="https://www.datainmotion.com"; \
        organization="Data In Motion"; \
        organizationUrl="https://www.datainmotion.com"; \
        roles="developer,architect"

project-version: ${base-version}.SNAPSHOT
mvn-base-version: ${versionmask;===s;${project-version}}

# Includes sources from bundle
-sources: true

#Include license
-includeresource.license: \
	META-INF/LICENSE=${.}/LICENSE

# Some default to the buildpath for basix dependencies on OSGi	
-buildpath.base: \
    org.osgi.annotation.versioning,\
    org.osgi.annotation.bundle, \
    org.osgi.service.component.annotations,\
    org.osgi.service.metatype.annotations

# Activate baselining per default to de-activate set 'dimBaselining: false'
dimcBaselining: true

#DIMC Nexus release repository    
-plugin.dimrelease: \
	aQute.bnd.repository.maven.provider.MavenBndRepository;\
		snapshotUrl=https://devel.data-in-motion.biz/nexus/repository/dim-snapshot/;\
		releaseUrl=https://devel.data-in-motion.biz/nexus/repository/dim-release/;\
		name='DIM_Release'

# Ignore files for baselining
-diffignore: *.xml,\
	*/pom.properties,\
	 Git-SHA,\
	 Bundle-Vendor,\
	 Bundle-License,\
	 Bundle-DocURL,\
	 Bundle-SCM,\
	 Bundle-Developers,\
	 Bundle-Copyright,\
	 Bundle-ContactAddress,\
	 META-INF/maven/*,\
	 OSGI-OPT/*
	
# Find out if the current Bundle Version is already deployed in any repository (excluding the Workspace)
releaseNotNeeded: \
	${if;${def;Bundle-Version};\
		${findproviders;osgi.identity;(&(osgi.identity=${bsn})(version=${base-version}));REPOS};\
	false}

# If release not needed is empty, no Bundle has been found and for maven we do a release to the remote Repo. If not, we only do a release to the local .m2 Repo
-maven-release.local: ${if;${def;releaseNotNeeded};local;remote}

-maven-release: pom
-pom: true
-digest: sha256

-releaserepo: Release, DIM_Release

# If the 'release.dir property is set , we make a release release, otherwise we make only a snapshot release
# As long as we are on Jenkins, we also release to Maven Central
-include: \
	${if;${dimcBaselining};\
		${.}/baseline.bnd},\
	${if;${def;release.dir};\
		${.}/releng/release.bnd;\
		${.}/releng/snapshot.bnd\
	},\
	${if;${env;GNUPG_PASSPHRASE};\
		${.}/releng/central.bnd\
	}	